{"version":3,"file":"static/js/310.be112f73.chunk.js","mappings":"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","sources":["components/Box.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/EditContact/EditContact.styled.js","components/EditContact/EditContact.js","components/ContactList/components/ContactListItem.styled.js","components/ContactList/components/ContactListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from '@emotion/styled';\n\nexport const SectionHeading = styled.h2`\n  font-size: ${p => p.theme.fontSizes.l};\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { SectionHeading } from './Section.styled';\n\nexport const Section = ({ title, children }) => (\n  <Box\n    as=\"section\"\n    p={4}\n    display=\"flex\"\n    flexDirection=\"column\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n  >\n    <SectionHeading>{title}</SectionHeading>\n    {children}\n  </Box>\n);\n\nSection.propType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object,\n};\n","import styled from '@emotion/styled';\n\nexport const FormBox = styled.form`\n  position: relative;\n  border: 1px solid black;\n  width: 400px;\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Error = styled.p`\n  color: red;\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: #808080e3;\n`;\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'services/contactsApi';\nimport { toast } from 'react-toastify';\nimport { Audio } from 'react-loader-spinner';\nimport { Button } from '@mui/material';\nimport { Label, FormBox, Error, Wrapper } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [createContact, { isLoading, isSuccess, isError }] =\n    useCreateContactMutation();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n    resetField,\n  } = useForm({\n    defaultValues: { name: '', number: '' },\n  });\n  const nameValue = watch('name');\n  const numberValue = watch('number');\n\n  const handleNewContact = newContact => {\n    if (!hasDuplicates(newContact.name)) {\n      createContact(newContact);\n      resetField('name');\n      resetField('number');\n    } else {\n      toast.warn(`${newContact.name} is already in contacts.`);\n    }\n  };\n\n  const hasDuplicates = duplicate => {\n    return contacts.find(({ name }) => name === duplicate);\n  };\n\n  const onFormSubmit = () => {\n    const newContact = {\n      name: nameValue,\n      number: numberValue,\n    };\n\n    handleNewContact(newContact);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact added');\n    }\n\n    if (isError) {\n      toast.error('Oops!! Something went wrong!');\n    }\n  }, [isSuccess, isError]);\n\n  return (\n    <FormBox onSubmit={handleSubmit(onFormSubmit)} autoComplete=\"off\">\n      {isLoading && (\n        <Wrapper>\n          <Audio color=\"#61dafb\" />\n        </Wrapper>\n      )}\n      <Label>\n        <span>Name</span>\n        <input\n          placeholder=\"John\"\n          value={nameValue}\n          type=\"text\"\n          {...register('name', {\n            required: { value: true, message: 'This field is required' },\n            pattern: {\n              value:\n                /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/g,\n              message:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n          })}\n        />\n        {errors.name?.message && <Error>{errors.name?.message}</Error>}\n      </Label>\n      <Label>\n        <span>Number</span>\n        <input\n          placeholder=\"1234567890\"\n          value={numberValue}\n          {...register('number', {\n            required: { value: true, message: 'This field is required' },\n            pattern: {\n              value:\n                /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/g,\n              message:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n          type=\"tel\"\n        />\n        {errors.number?.message && <Error>{errors.number?.message}</Error>}\n      </Label>\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </FormBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { FaRegWindowClose } from 'react-icons/fa';\n\nexport const EditFormWrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  min-height: 300px;\n  gap: 40px;\n  padding: 20px;\n  border-radius: 10px;\n  background-color: gray;\n`;\n\nexport const EditForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  width: 100%;\n  height: 40px;\n  border-radius: 10px;\n`;\n\nexport const LoaderContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: grey;\n  border-radius: 10px;\n`;\n\nexport const SubmitBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 10px;\n  border: none;\n  outline: 2px solid green;\n  border-radius: 10px;\n  height: 40px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: green;\n    color: white;\n  }\n`;\n\nexport const CloseBtn = styled(FaRegWindowClose)`\n  position: absolute;\n  top: 5%;\n  right: 5%;\n  width: 25px;\n  height: 25px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: red;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useEffect } from 'react';\nimport { Box } from 'components/Box';\nimport { Audio } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport {\n  useEditContactMutation,\n  useGetContactByIdQuery,\n} from 'services/contactsApi';\nimport { toast } from 'react-toastify';\nimport {\n  EditFormWrapper,\n  EditForm,\n  Input,\n  LoaderContainer,\n  SubmitBtn,\n  Label,\n  CloseBtn,\n} from './EditContact.styled';\n\nexport const EditContact = ({ id, closeModal }) => {\n  const { data, isLoading } = useGetContactByIdQuery(id);\n  const [editContact, { isLoading: isEditLoading, isSuccess, isError }] =\n    useEditContactMutation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = formData => {\n    editContact({ ...data, ...formData });\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact edited');\n      closeModal();\n    }\n\n    if (isError) {\n      toast.error('Oops!! Something went wrong!');\n    }\n  }, [closeModal, isError, isSuccess]);\n\n  return (\n    <EditFormWrapper>\n      <CloseBtn onClick={closeModal} />\n      {isLoading || isEditLoading ? (\n        <LoaderContainer>\n          <Audio />\n        </LoaderContainer>\n      ) : (\n        <EditForm onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          <h2>Edit contact</h2>\n          <Label>\n            <Box mb={2}>Name</Box>\n            <Input\n              defaultValue={data?.name}\n              {...register('name', {\n                required: { value: true, message: 'This field is required' },\n                pattern: {\n                  value:\n                    /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/g,\n                  message:\n                    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n                },\n              })}\n            />\n            {errors.name && (\n              <div style={{ color: '#cb0f0f' }}>{errors.name?.message}</div>\n            )}\n          </Label>\n\n          <Label>\n            <Box mb={2}>Number</Box>\n            <Input\n              defaultValue={data?.number}\n              {...register('number', {\n                required: { value: true, message: 'This field is required' },\n                pattern: {\n                  value:\n                    /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/g,\n                  message:\n                    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n                },\n              })}\n            />\n            {errors.number && (\n              <div style={{ color: '#cb0f0f' }}>{errors.name?.message}</div>\n            )}\n          </Label>\n\n          <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n        </EditForm>\n      )}\n    </EditFormWrapper>\n  );\n};\n\nEditContact.propType = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 13px;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n  &:hover:not([disabled]) {\n    background-color: #61dafb;\n  }\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Oval } from 'react-loader-spinner';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Contact, Btn } from './ContactListItem.styled';\nimport { Box } from 'components/Box';\nimport { useDeleteContactByIdMutation } from 'services/contactsApi';\nimport { toast } from 'react-toastify';\n\nexport const ContactListItem = ({ id, name, number, openModal }) => {\n  const [deleteContact, { isSuccess, isLoading, isError }] =\n    useDeleteContactByIdMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact deleted');\n    }\n\n    if (isError) {\n      toast.error('Oops!! Something went wrong!');\n    }\n  }, [isSuccess, isError]);\n\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"space-between\" gridGap=\"10px\">\n        <Contact>\n          {name}: {number}\n        </Contact>\n        <Box display=\"flex\" gridGap=\"10px\">\n          <Btn\n            type=\"button\"\n            onClick={() => {\n              openModal(id);\n            }}\n          >\n            <EditIcon fontSize=\"small\" style={{ color: 'blue' }} />\n          </Btn>\n          <Btn\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <Oval\n                height={10}\n                width={10}\n                color=\"red\"\n                visible={true}\n                ariaLabel=\"oval-loading\"\n                secondaryColor=\"red\"\n                strokeWidth={10}\n                strokeWidthSecondary={10}\n              />\n            ) : (\n              <DeleteForeverIcon fontSize=\"small\" style={{ color: 'red' }} />\n            )}\n          </Btn>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nContactListItem.propType = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  border: 1px solid black;\n  width: 400px;\n  min-height: 100px;\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: #808080e3;\n`;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContactsFilter } from 'redux/AppSlice';\nimport { useGetContactsQuery } from 'services/contactsApi';\nimport { Audio } from 'react-loader-spinner';\nimport { Modal } from 'components/Modal/Modal';\nimport { EditContact } from 'components/EditContact/EditContact';\nimport { ContactListItem } from './components/ContactListItem';\nimport { Contacts, Wrapper } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editContactId, setEditContactId] = useState(null);\n  const { data: contacts, isFetching } = useGetContactsQuery();\n  const filter = useSelector(selectContactsFilter);\n  const filteredContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  const openModal = contactId => {\n    setIsModalOpen(true);\n    setEditContactId(contactId);\n    window.document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    window.document.body.style.overflow = 'unset';\n  };\n\n  return (\n    <>\n      <Contacts>\n        {isFetching && (\n          <Wrapper>\n            <Audio\n              width=\"70\"\n              height=\"70\"\n              color=\"#61dafb\"\n              radius=\"9\"\n              ariaLabel=\"loading\"\n            />\n          </Wrapper>\n        )}\n        {filteredContacts?.length ? (\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              openModal={openModal}\n            />\n          ))\n        ) : (\n          <li>No contacts</li>\n        )}\n      </Contacts>\n      {isModalOpen && (\n        <Modal closeModal={closeModal}>\n          <EditContact id={editContactId} closeModal={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  width: 400px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { addFilter, selectContactsFilter } from '../../redux/AppSlice';\nimport { Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const { control } = useForm();\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const onInputChange = evt => {\n    dispatch(addFilter(evt.target.value));\n  };\n\n  return (\n    <>\n      <form>\n        <Label>\n          <span>Find contacts by name</span>\n          <Controller\n            render={({ field }) => (\n              <input {...field} onChange={onInputChange} value={filter} />\n            )}\n            name=\"filter\"\n            control={control}\n            defaultValue=\"\"\n          />\n        </Label>\n      </form>\n    </>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","SectionHeading","p","theme","fontSizes","l","Section","title","children","as","display","flexDirection","alignItems","justifyContent","propType","PropTypes","FormBox","Label","Error","Wrapper","ContactForm","contacts","useGetContactsQuery","data","useCreateContactMutation","createContact","isLoading","isSuccess","isError","useForm","defaultValues","name","number","register","handleSubmit","watch","errors","formState","resetField","nameValue","numberValue","hasDuplicates","duplicate","find","useEffect","toast","onSubmit","newContact","handleNewContact","autoComplete","placeholder","value","type","required","message","pattern","Button","variant","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","closeModal","handleKeyDown","evt","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","EditFormWrapper","EditForm","Input","LoaderContainer","SubmitBtn","CloseBtn","FaRegWindowClose","EditContact","id","useGetContactByIdQuery","useEditContactMutation","editContact","isEditLoading","formData","mb","defaultValue","style","Contact","Btn","ContactListItem","openModal","useDeleteContactByIdMutation","deleteContact","gridGap","Edit","fontSize","disabled","height","width","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","DeleteForever","Contacts","ContactList","useState","isModalOpen","setIsModalOpen","editContactId","setEditContactId","isFetching","filter","useSelector","selectContactsFilter","filteredContacts","toLowerCase","includes","contactId","body","overflow","radius","length","map","Filter","control","dispatch","useDispatch","onInputChange","addFilter","render","field","onChange"],"sourceRoot":""}