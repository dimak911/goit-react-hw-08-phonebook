{"version":3,"file":"static/js/186.bddefb04.chunk.js","mappings":"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","sources":["pages/RegistrationPage.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n} from '@mui/material';\n// import ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport {\n  // NavLink,\n  Router,\n} from 'react-router-dom';\n\nconst RegistrationPage = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      policy: false,\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n      firstName: Yup.string().max(255).required('First name is required'),\n      lastName: Yup.string().max(255).required('Last name is required'),\n      password: Yup.string().max(255).required('Password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked'),\n    }),\n    onSubmit: () => {\n      Router.push('/').catch(console.error);\n    },\n  });\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        flexGrow: 1,\n        minHeight: '100%',\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        {/* <NavLink to=\"/\">\n          <Button component=\"a\" startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n            Dashboard\n          </Button>\n        </NavLink> */}\n        <form onSubmit={formik.handleSubmit}>\n          <Box sx={{ my: 3 }}>\n            <Typography color=\"textPrimary\" variant=\"h4\">\n              Create a new account\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n              Use your email to create a new account\n            </Typography>\n          </Box>\n          <TextField\n            error={Boolean(formik.touched.firstName && formik.errors.firstName)}\n            fullWidth\n            helperText={formik.touched.firstName && formik.errors.firstName}\n            label=\"First Name\"\n            margin=\"normal\"\n            name=\"firstName\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.firstName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.lastName && formik.errors.lastName)}\n            fullWidth\n            helperText={formik.touched.lastName && formik.errors.lastName}\n            label=\"Last Name\"\n            margin=\"normal\"\n            name=\"lastName\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.lastName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.email && formik.errors.email)}\n            fullWidth\n            helperText={formik.touched.email && formik.errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"email\"\n            value={formik.values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.password && formik.errors.password)}\n            fullWidth\n            helperText={formik.touched.password && formik.errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            type=\"password\"\n            value={formik.values.password}\n            variant=\"outlined\"\n          />\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              ml: -1,\n            }}\n          >\n            <Checkbox\n              checked={formik.values.policy}\n              name=\"policy\"\n              onChange={formik.handleChange}\n            />\n            <Typography color=\"textSecondary\" variant=\"body2\">\n              I have read the {/* <NavLink to=\"/\"> */}\n              <Link color=\"primary\" underline=\"always\" variant=\"subtitle2\">\n                Terms and Conditions\n              </Link>\n              {/* </NavLink> */}\n            </Typography>\n          </Box>\n          {Boolean(formik.touched.policy && formik.errors.policy) && (\n            <FormHelperText error>{formik.errors.policy}</FormHelperText>\n          )}\n          <Box sx={{ py: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={formik.isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Sign Up Now\n            </Button>\n          </Box>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            Have an account? {/* <NavLink to=\"/login\"> */}\n            <Link variant=\"subtitle2\" underline=\"hover\">\n              Sign In\n            </Link>\n            {/* </NavLink> */}\n          </Typography>\n        </form>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["formik","useFormik","initialValues","email","firstName","lastName","password","policy","validationSchema","Yup","max","required","oneOf","onSubmit","Router","catch","console","error","component","sx","alignItems","display","flexGrow","minHeight","maxWidth","handleSubmit","my","color","variant","gutterBottom","Boolean","touched","errors","fullWidth","helperText","label","margin","name","onBlur","handleBlur","onChange","handleChange","value","values","type","ml","checked","underline","py","disabled","isSubmitting","size"],"sourceRoot":""}