{"version":3,"file":"static/js/588.2d110fe2.chunk.js","mappings":"qSA4HA,UAlHkB,WAChB,OAA8CA,EAAAA,EAAAA,MAA9C,eAAOC,EAAP,YAAgBC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,QAC3BC,GAAWC,EAAAA,EAAAA,MACjB,GASIC,EAAAA,EAAAA,IAAU,CACZC,cAAe,CACbC,MAAO,iBACPC,SAAU,YAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KACJH,MAAM,yBACNI,IAAI,KACJC,SAAS,qBACZJ,SAAUE,EAAAA,KAAaC,IAAI,KAAKC,SAAS,0BAE3CC,SAAU,YAA0B,IAAvBN,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClBT,EAAM,CACJQ,MAAAA,EACAC,SAAAA,GAEH,IAzBDM,EADF,EACEA,aACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,aACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,aACAC,EARF,EAQEA,cAkCF,OAbAC,EAAAA,EAAAA,YAAU,YACJrB,GAAaC,IAASmB,GAAc,GAEpCpB,IACFsB,EAAAA,GAAAA,QAAc,uBACdpB,GAASqB,EAAAA,EAAAA,IAAYxB,KAGnBE,GACFqB,EAAAA,GAAAA,MAAY,mCAEf,GAAE,CAACvB,EAAMG,EAAUD,EAASD,EAAWoB,KAGtC,+BACE,SAAC,IAAD,CACEI,UAAU,OACVC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,SAAU,EACVC,UAAW,QANf,UASE,SAAC,IAAD,CAAWC,SAAS,KAApB,UACE,kBAAMlB,SAAUC,EAAhB,WACE,UAAC,IAAD,CAAKY,GAAI,CAAEM,GAAI,GAAf,WACE,SAAC,IAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAxC,sBAGA,SAAC,IAAD,CAAYD,MAAM,gBAAgBE,cAAY,EAACD,QAAQ,QAAvD,kDAIF,SAAC,IAAD,CACEE,MAAOC,QAAQtB,EAAQR,OAASS,EAAOT,OACvC+B,WAAS,EACTC,WAAYxB,EAAQR,OAASS,EAAOT,MACpCiC,MAAM,gBACNC,OAAO,SACPC,KAAK,QACLC,OAAQ1B,EACR2B,SAAU1B,EACV2B,KAAK,QACLC,MAAO3B,EAAOZ,MACd2B,QAAQ,cAEV,SAAC,IAAD,CACEE,MAAOC,QAAQtB,EAAQP,UAAYQ,EAAOR,UAC1C8B,WAAS,EACTC,WAAYxB,EAAQP,UAAYQ,EAAOR,SACvCgC,MAAM,WACNC,OAAO,SACPC,KAAK,WACLC,OAAQ1B,EACR2B,SAAU1B,EACV2B,KAAK,WACLC,MAAO3B,EAAOX,SACd0B,QAAQ,cAEV,SAAC,IAAD,CAAKR,GAAI,CAAEqB,GAAI,GAAf,UACE,SAAC,IAAD,CACEd,MAAM,UACNe,SAAU5B,EACVkB,WAAS,EACTW,KAAK,QACLJ,KAAK,SACLX,QAAQ,YANV,4BAWF,UAAC,IAAD,CAAYD,MAAM,gBAAgBC,QAAQ,QAA1C,qCAC8B,SAAC,KAAD,CAAMgB,GAAG,YAAT,gCAOzC,C","sources":["pages/LoginPage.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Button, Container, TextField, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useLoginMutation } from 'services/contactsApi';\nimport { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addUserData } from 'redux/AuthSlice';\n\nconst LoginPage = () => {\n  const [login, { data, isSuccess, isError }] = useLoginMutation();\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    handleBlur,\n    handleChange,\n    values,\n    isSubmitting,\n    setSubmitting,\n  } = useFormik({\n    initialValues: {\n      email: '1test@test.com',\n      password: '1qaz2wsX',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n      password: Yup.string().max(255).required('Password is required'),\n    }),\n    onSubmit: ({ email, password }) => {\n      login({\n        email,\n        password,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (isSuccess || isError) setSubmitting(false);\n\n    if (isSuccess) {\n      toast.success('Login is successful');\n      dispatch(addUserData(data));\n    }\n\n    if (isError) {\n      toast.error('Something went wrong. Try again.');\n    }\n  }, [data, dispatch, isError, isSuccess, setSubmitting]);\n\n  return (\n    <>\n      <Box\n        component=\"main\"\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexGrow: 1,\n          minHeight: '100%',\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <form onSubmit={handleSubmit}>\n            <Box sx={{ my: 3 }}>\n              <Typography color=\"textPrimary\" variant=\"h4\">\n                Sign in\n              </Typography>\n              <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n                Sign in on the internal platform\n              </Typography>\n            </Box>\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <Box sx={{ py: 2 }}>\n              <Button\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Sign In Now\n              </Button>\n            </Box>\n            <Typography color=\"textSecondary\" variant=\"body2\">\n              Don&apos;t have an account? <Link to=\"/register\">Sign Up</Link>\n            </Typography>\n          </form>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["useLoginMutation","login","data","isSuccess","isError","dispatch","useDispatch","useFormik","initialValues","email","password","validationSchema","Yup","max","required","onSubmit","handleSubmit","touched","errors","handleBlur","handleChange","values","isSubmitting","setSubmitting","useEffect","toast","addUserData","component","sx","alignItems","display","flexGrow","minHeight","maxWidth","my","color","variant","gutterBottom","error","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","py","disabled","size","to"],"sourceRoot":""}