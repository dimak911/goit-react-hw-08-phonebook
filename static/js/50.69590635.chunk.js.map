{"version":3,"file":"static/js/50.69590635.chunk.js","mappings":"8QAqIA,UA7HyB,WACvB,OAA6CA,EAAAA,EAAAA,MAA7C,eAAOC,EAAP,YAAqBC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,QAChC,GASIC,EAAAA,EAAAA,IAAU,CACZC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BJ,KAAMI,EAAAA,KAAaC,IAAI,KAAKC,SAAS,0BACrCL,MAAOG,EAAAA,KACJH,MAAM,yBACNI,IAAI,KACJC,SAAS,qBACZJ,SAAUE,EAAAA,KAAaC,IAAI,KAAKC,SAAS,0BAE3CC,SAAU,YAAgC,IAA7BP,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxBP,EAAW,CACTK,KAAAA,EACAC,MAAAA,EACAC,SAAAA,GAEH,IA5BDM,EADF,EACEA,aACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,aACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,aACAC,EARF,EAQEA,cAoCF,OAZAC,EAAAA,EAAAA,YAAU,YACJpB,GAAaC,IAASkB,GAAc,GAEpCnB,GACFqB,EAAAA,GAAAA,QAAc,gBAGZpB,GACFoB,EAAAA,GAAAA,MAAY,mCAEf,GAAE,CAACpB,EAASD,EAAWmB,KAGtB,SAAC,IAAD,CACEG,UAAU,OACVC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,SAAU,EACVC,UAAW,QANf,UASE,SAAC,IAAD,CAAWC,SAAS,KAApB,UACE,kBAAMjB,SAAUC,EAAhB,WACE,UAAC,IAAD,CAAKW,GAAI,CAAEM,GAAI,GAAf,WACE,SAAC,IAAD,CAAYC,MAAM,cAAcC,QAAQ,KAAxC,mCAGA,SAAC,IAAD,CAAYD,MAAM,gBAAgBE,cAAY,EAACD,QAAQ,QAAvD,wDAIF,SAAC,IAAD,CACEE,MAAOC,QAAQrB,EAAQT,MAAQU,EAAOV,MACtC+B,WAAS,EACTC,WAAYvB,EAAQT,MAAQU,EAAOV,KACnCiC,MAAM,OACNC,OAAO,SACPlC,KAAK,OACLmC,OAAQxB,EACRyB,SAAUxB,EACVyB,MAAOxB,EAAOb,KACd2B,QAAQ,cAEV,SAAC,IAAD,CACEE,MAAOC,QAAQrB,EAAQR,OAASS,EAAOT,OACvC8B,WAAS,EACTC,WAAYvB,EAAQR,OAASS,EAAOT,MACpCgC,MAAM,gBACNC,OAAO,SACPlC,KAAK,QACLmC,OAAQxB,EACRyB,SAAUxB,EACV0B,KAAK,QACLD,MAAOxB,EAAOZ,MACd0B,QAAQ,cAEV,SAAC,IAAD,CACEE,MAAOC,QAAQrB,EAAQP,UAAYQ,EAAOR,UAC1C6B,WAAS,EACTC,WAAYvB,EAAQP,UAAYQ,EAAOR,SACvC+B,MAAM,WACNC,OAAO,SACPlC,KAAK,WACLmC,OAAQxB,EACRyB,SAAUxB,EACV0B,KAAK,WACLD,MAAOxB,EAAOX,SACdyB,QAAQ,cAEV,SAAC,IAAD,CAAKR,GAAI,CAAEoB,GAAI,GAAf,UACE,SAAC,IAAD,CACEb,MAAM,UACNc,SAAU1B,EACViB,WAAS,EACTU,KAAK,QACLH,KAAK,SACLX,QAAQ,YANV,4BAWF,UAAC,IAAD,CAAYD,MAAM,gBAAgBC,QAAQ,QAA1C,+BACmB,SAAC,KAAD,CAAMe,GAAG,SAAT,8BAM5B,C","sources":["pages/RegisterPage.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Button, Container, TextField, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useCreateNewUserMutation } from 'services/contactsApi';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst RegistrationPage = () => {\n  const [createUser, { isSuccess, isError }] = useCreateNewUserMutation();\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    handleBlur,\n    handleChange,\n    values,\n    isSubmitting,\n    setSubmitting,\n  } = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required('First name is required'),\n      email: Yup.string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n      password: Yup.string().max(255).required('Password is required'),\n    }),\n    onSubmit: ({ name, email, password }) => {\n      createUser({\n        name,\n        email,\n        password,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (isSuccess || isError) setSubmitting(false);\n\n    if (isSuccess) {\n      toast.success('User created');\n    }\n\n    if (isError) {\n      toast.error('Something went wrong. Try again.');\n    }\n  }, [isError, isSuccess, setSubmitting]);\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        flexGrow: 1,\n        minHeight: '100%',\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <form onSubmit={handleSubmit}>\n          <Box sx={{ my: 3 }}>\n            <Typography color=\"textPrimary\" variant=\"h4\">\n              Create a new account\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n              Use your email to create a new account\n            </Typography>\n          </Box>\n          <TextField\n            error={Boolean(touched.name && errors.name)}\n            fullWidth\n            helperText={touched.name && errors.name}\n            label=\"Name\"\n            margin=\"normal\"\n            name=\"name\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={values.name}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box sx={{ py: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Sign Up Now\n            </Button>\n          </Box>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            Have an account? <Link to=\"/login\">Sign In</Link>\n          </Typography>\n        </form>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["useCreateNewUserMutation","createUser","isSuccess","isError","useFormik","initialValues","name","email","password","validationSchema","Yup","max","required","onSubmit","handleSubmit","touched","errors","handleBlur","handleChange","values","isSubmitting","setSubmitting","useEffect","toast","component","sx","alignItems","display","flexGrow","minHeight","maxWidth","my","color","variant","gutterBottom","error","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","value","type","py","disabled","size","to"],"sourceRoot":""}